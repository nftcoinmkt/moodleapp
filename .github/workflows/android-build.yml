name: Build, Sign AAB, and Convert to APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install npm dependencies
        run: |
          npm ci --no-audit
          npm ci --no-audit --prefix cordova-plugin-moodleapp

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build Android App Bundle (AAB)
        run: npx ionic cordova build android --prod --release -- --bundle

      - name: Sign AAB
        id: sign_aab
        run: |
          echo "Signing AAB..."
          AAB_PATH=$(find platforms/android/app/build/outputs/bundle/release -name "*.aab" | head -n 1)
          if [ -z "$AAB_PATH" ]; then
            echo "AAB file not found!"
            exit 1
          fi
          echo "AAB_PATH=$AAB_PATH" >> $GITHUB_ENV
          KEYSTORE_PATH=${{ runner.temp }}/keystore.jks
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > $KEYSTORE_PATH
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
            -keystore $KEYSTORE_PATH \
            -storepass "${{ secrets.KEYSTORE_PASSWORD }}" \
            -keypass "${{ secrets.KEY_PASSWORD }}" \
            $AAB_PATH "${{ secrets.KEY_ALIAS }}"

      - name: Download bundletool
        run: |
          BUNDLETOOL_VERSION="1.15.6"
          wget https://github.com/google/bundletool/releases/download/${BUNDLETOOL_VERSION}/bundletool-all-${BUNDLETOOL_VERSION}.jar -O bundletool.jar

      - name: Convert AAB to APK
        run: |
          java -jar bundletool.jar build-apks \
            --bundle=${{ env.AAB_PATH }} \
            --output=moodleapp.apks \
            --mode=universal \
            --ks=$KEYSTORE_PATH \
            --ks-pass=pass:${{ secrets.KEYSTORE_PASSWORD }} \
            --ks-key-alias=${{ secrets.KEY_ALIAS }} \
            --key-pass=pass:${{ secrets.KEY_PASSWORD }}
          unzip -p moodleapp.apks universal.apk > moodleapp-universal.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: moodle-app-apk
          path: moodleapp-universal.apk
